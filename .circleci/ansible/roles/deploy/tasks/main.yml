---
# - name: install npm
#   become: true
#   shell: |
#     apt update
#     apt-get install -y nodejs           
#     apt-get install -y npm
- name: Create app dir
  become: yes
  file:
    path: /home/ubuntu/app
    state: directory

- name: "Copy backend build folder to EC2"
  become: yes
  unarchive:
    src: /tmp/workspace/backend.tar.gz
    dest: /home/ubuntu/app/
    owner: ubuntu

- name: "Copy package.json to EC2"
  become: yes
  copy:
    src: /tmp/workspace/package.json
    dest: /home/ubuntu/app/
    owner: ubuntu

- name: "NPM Install"
  shell: |
    sudo apt update
    sudo apt-get install -y npm
    cd /home/ubuntu/app

# - name: Build backend
#   ignore_errors: yes
#   shell: |
#     cd /home/ubuntu/app
#     npm i
#     npm run build

- name: Stop and delete already running server
  ignore_errors: yes
  shell: |
    pm2 stop app
    pm2 delete app

- name: "Start backend with pm2"
  become: yes
  shell: |
    cd /home/ubuntu/app
    pm2 start main.js --name app
  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"